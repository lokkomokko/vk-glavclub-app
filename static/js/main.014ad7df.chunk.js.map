{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","notificationSwitch","go","fetchedUser","notificationEnabled","asideContent","onChange","e","checked","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","allow","frameBorder","src","scrolling","App","useState","activePanel","setActivePanel","setUser","setNotificationEnabled","size","setPopout","url_string","window","location","href","vk_are_notifications_enabled","URL","searchParams","get","useEffect","a","connect","sendPromise","user","console","log","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","fetch","then","response","json","currentTarget","dataset","to","bridge","send","catch","ReactDOM","render","getElementById"],"mappings":"2nBA0CeA,G,OAjCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAqBC,GAAxB,EAAOC,GAAP,EAAWC,YAAX,EAAwBF,oBAAoBG,EAA5C,EAA4CA,oBAA5C,OACZ,kBAAC,IAAD,CAAOJ,GAAIA,GACV,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAMK,aAAc,kBAAC,IAAD,CACnBC,SAAU,SAAAC,GAAC,OAAIN,KACfO,QAASJ,KAFV,6NAOD,4BAAQK,sBAAsB,OAAOC,mBAAmB,OAAOC,gBAAgB,OAC7EC,MAAM,6CAA6CC,YAAY,IAC/DC,IAAI,gDACHC,UAAU,UCgEAC,EA7EH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVd,EAFU,KAEGiB,EAFH,OAGqCH,oBAAS,GAH9C,mBAGVb,EAHU,KAGWiB,EAHX,OAIWJ,mBAAS,kBAAC,IAAD,CAAeK,KAAK,WAJxC,mBAIFC,GAJE,WAKXC,EAAaC,OAAOC,SAASC,KAE7BC,EADM,IAAIC,IAAIL,GACqBM,aAAaC,IAAI,gCAE1DC,qBAAU,WAAM,4CAuBf,4BAAAC,EAAA,sEACoBC,IAAQC,YAAY,uBADxC,OACOC,EADP,OAECC,QAAQC,IAAIF,GACZhB,EAAQgB,GACRb,EAAU,MAJX,4CAvBe,sBACfW,IAAQK,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACpC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAevCtB,KAVKO,GAYNS,QAAQC,IAAI,IAAKV,GAtBF,mCA6BfuB,KACE,IA0BH,OATIhD,GAAeA,EAAYH,IAC9BoD,MAAM,gDAAkDjD,EAAYH,IAClEqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACLjB,QAAQC,IAAIgB,MAMd,kBAAC,IAAD,CAAMpC,YAAaA,GAClB,kBAAC,EAAD,CAAMlB,GAAG,OACNG,YAAaA,EACbD,GA5BM,SAAAK,GACVY,EAAeZ,EAAEiD,cAAcC,QAAQC,KA4BnCtD,oBAAqBA,EACrBH,mBA1BsB,WAEtBG,EACHuD,IAAOC,KAAK,4BAA6B,IACvCP,MAAK,kBAAMhC,GAAuB,MAEpCsC,IAAOC,KAAK,6BAA8B,IACxCP,MAAK,kBAAOhC,GAAuB,MACnCwC,OAAM,kBAAOxC,GAAuB,WCrDzCa,IAAQ0B,KAAK,gBAQbE,IAASC,OAAO,kBAAC,EAAD,MAASnB,SAASoB,eAAe,U","file":"static/js/main.014ad7df.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Switch from '@vkontakte/vkui/dist/components/Switch/Switch';\n\nimport \"./style.css\"\n\nconst Home = ({ id, go, fetchedUser, notificationSwitch, notificationEnabled }) => (\n\t<Panel id={id}>\n\t\t<Group>\n\t\t\t<Cell asideContent={<Switch\n\t\t\t\tonChange={e => notificationSwitch()}\n\t\t\t\tchecked={notificationEnabled}\n\t\t\t/>}>\n\t\t\t\tУведомления о запусках концертов / акциях\n\t\t\t</Cell>\n\t\t</Group>\n\t\t<iframe webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" allowFullScreen=\"true\"\n\t\t\t\tallow=\"geolocation; microphone; camera; autoplay;\" frameBorder=\"0\"\n\t\t\t\tsrc=\"https://vk2feed.cultserv.ru/?refcode=glavclub\"\n\t\t\t\t scrolling=\"no\"></iframe>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tnotificationSwitch: PropTypes.func.isRequired,\n\tnotificationEnabled: PropTypes.bool,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [notificationEnabled, setNotificationEnabled] = useState(false);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst url_string = window.location.href;\n\tconst url = new URL(url_string);\n\tconst vk_are_notifications_enabled = url.searchParams.get(\"vk_are_notifications_enabled\");\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\n\t\t// TODO включалка нотификаций\n\t\tif (!+vk_are_notifications_enabled) {\n\t\t\t// setTimeout(() => {\n\t\t\t// connect.send(\"VKWebAppAllowNotifications\", {})\n\t\t\t\t// .then(() => {\n\t\t\t\t// \tsetNotificationEnabled(true)\n\t\t\t\t// })\n\t\t\t// connect.send(\"VKWebAppDenyNotifications\", {});\n            // }, 60000)\n\t\t\tsetNotificationEnabled(false)\n\t\t} else {\n\t\t\tsetNotificationEnabled(true)\n\t\t}\n\t\tconsole.log(111, vk_are_notifications_enabled)\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tconsole.log(user)\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tconst notificationSwitch = () => {\n\t\t// setNotificationEnabled(!notificationEnabled)\n\t\tif (notificationEnabled) {\n\t\t\tbridge.send(\"VKWebAppDenyNotifications\", {})\n\t\t\t\t.then(() => setNotificationEnabled(false))\n\t\t} else {\n\t\t\tbridge.send(\"VKWebAppAllowNotifications\", {})\n\t\t\t\t.then(() => (setNotificationEnabled(true)))\n\t\t\t\t.catch(() => (setNotificationEnabled(false)))\n\t\t}\n\t};\n\tif (fetchedUser && fetchedUser.id) {\n\t\tfetch('https://glavclub.com/vk/KwgG259rqFt9gdDNpj8f/' + fetchedUser.id)\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response)\n\t\t\t});\n\t}\n\n\n\treturn (\n\t\t<View activePanel={activePanel} >\n\t\t\t<Home id='home'\n\t\t\t\t  fetchedUser={fetchedUser}\n\t\t\t\t  go={go}\n\t\t\t\t  notificationEnabled={notificationEnabled}\n\t\t\t\t  notificationSwitch={notificationSwitch}\n\t\t\t/>\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}