{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","allow","frameBorder","src","scrolling","App","useState","activePanel","setActivePanel","setUser","size","setPopout","useEffect","a","connect","sendPromise","user","console","log","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","send","fetchData","fetch","then","response","json","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"ujBA2BeA,G,OAtBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,EAAOC,GAAP,EAAWC,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,4BAAQG,sBAAsB,OAAOC,mBAAmB,OAAOC,gBAAgB,OAC7EC,MAAM,6CAA6CC,YAAY,IAC/DC,IAAI,yCACHC,UAAU,UCuCAC,EAzCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVT,EAFU,KAEGY,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAeI,KAAK,WAHxC,mBAGFC,GAHE,WAKjBC,qBAAU,WAAM,4CASf,4BAAAC,EAAA,sEACoBC,IAAQC,YAAY,uBADxC,OACOC,EADP,OAECC,QAAQC,IAAIF,GACZP,EAAQO,GACRL,EAAU,MAJX,4CATe,sBACfG,IAAQK,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACpC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAGlCT,IAAQiB,KAAK,6BAA8B,IARlC,mCAefC,KACE,IAaH,OARInC,GAAeA,EAAYF,IAC9BsC,MAAM,gDAAkDpC,EAAYF,IAClEuC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACLlB,QAAQC,IAAIiB,MAKd,kBAAC,IAAD,CAAM5B,YAAaA,GAClB,kBAAC,EAAD,CAAMZ,GAAG,OAAOE,YAAaA,EAAaD,GAbjC,SAAAyC,GACV7B,EAAe6B,EAAEC,cAAcC,QAAQC,SCvBzC1B,IAAQiB,KAAK,gBAQbU,IAASC,OAAO,kBAAC,EAAD,MAASlB,SAASmB,eAAe,U","file":"static/js/main.5ddf0888.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport \"./style.css\"\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<iframe webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" allowFullScreen=\"true\"\n\t\t\t\tallow=\"geolocation; microphone; camera; autoplay;\" frameBorder=\"0\"\n\t\t\t\tsrc=\"https://vk2feed.cultserv.ru/#/glavclub\"\n\t\t\t\t scrolling=\"no\"></iframe>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n        connect.send(\"VKWebAppAllowNotifications\", {});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tconsole.log(user)\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\tif (fetchedUser && fetchedUser.id) {\n\t\tfetch('https://glavclub.com/vk/KwgG259rqFt9gdDNpj8f/' + fetchedUser.id)\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response)\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<View activePanel={activePanel} >\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}